<% layout("/layouts/boilerplate") %>

<section class="min-h-screen bg-gray-100 py-12 px-4">
  <div
    class="admin-panel w-full max-w-4xl mx-auto p-8 bg-white shadow-lg rounded-2xl border border-gray-200"
  >
    <h1 class="text-3xl font-bold text-gray-800 mb-4">Add Skills</h1>
    <p class="text-gray-600 mb-6">
      Use the form below to add new skills to your portfolio...
    </p>

    <form
      action="/add-skills"
      method="POST"
      class="space-y-6"
      novalidate
      @submit.prevent="validateAndSubmit"
      x-data="formHandler()"
    >
      <!-- Skill Name -->
      <div>
        <label for="skill" class="block text-sm font-medium text-gray-700 mb-1"
          >Skill Name</label
        >
        <input
          x-model="skill"
          type="text"
          id="skill"
          name="skill"
          placeholder="e.g., Java"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring focus:ring-blue-300"
          required
        />
        <p
          x-show="errors.skill"
          class="text-red-600 text-sm mt-1"
          x-text="errors.skill"
        ></p>
      </div>

      <!-- Skill Points (One by One) -->
      <div class="mb-6">
        <label
          for="pointInput"
          class="block text-sm font-medium text-gray-700 mb-1"
          >Skill Points</label
        >

        <div class="flex gap-2 mb-2">
          <input
            x-model="newPoint"
            id="pointInput"
            type="text"
            placeholder="e.g. Flowcharts & Pseudocodes, Variables & Data Types..."
            class="flex-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring focus:ring-blue-300"
            @keydown.enter.prevent="addPoint"
          />
          <button
            type="button"
            @click="addPoint"
            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition"
          >
            Add
          </button>
        </div>

        <ul class="list-disc pl-5 space-y-1 mb-2 text-gray-700">
          <template x-for="(point, index) in points" :key="index">
            <li class="flex justify-between items-center">
              <span x-text="point"></span>
              <button
                type="button"
                @click="removePoint(index)"
                class="text-red-500 hover:text-red-700 text-xs ml-2"
              >
                âœ–
              </button>
            </li>
            <hr class="pointshr border-gray-300 my-1" />
          </template>
        </ul>

        <input type="hidden" name="points" :value="points.join(',')" />
        <!-- <p class="text-xs text-gray-500">Add at least one point before submitting.</p> -->
        <p
          x-show="errors.points"
          class="text-red-600 text-sm mt-1"
          x-text="errors.points"
        ></p>
      </div>

      <!-- Tag Radio -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Tag</label>
        <div class="flex gap-6">
          <label class="inline-flex items-center cursor-pointer">
            <input
              type="radio"
              x-model="tag"
              name="tag"
              value="core"
              class="form-radio text-blue-600"
              required
            />
            <span class="ml-2 text-gray-700">Core</span>
          </label>
          <label class="inline-flex items-center cursor-pointer">
            <input
              type="radio"
              x-model="tag"
              name="tag"
              value="soft"
              class="form-radio text-blue-600"
            />
            <span class="ml-2 text-gray-700">Soft</span>
          </label>
        </div>
        <p
          x-show="errors.tag"
          class="text-red-600 text-sm mt-1"
          x-text="errors.tag"
        ></p>
      </div>

      <!-- Submit -->
      <div>
        <button
          type="submit"
          class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition"
        >
          âž• Add Skill
        </button>
      </div>
    </form>

    <!-- Existing Skills s <%= skills %> -->
    <div class="container my-5">
      <div class="card shadow-lg border-0 rounded-4">
        <div class="card-body p-5">
          <h3 class="fw-bold text-center text-gradient mb-4">
            ðŸ”€ Reorder Your Skills
          </h3>
          <p class="text-muted text-center mb-5">
            Drag and drop the skills to rearrange their order. Click
            <strong>Save Sequence</strong> once done.
          </p>

          <ul id="skillList" class="list-group list-group-flush rounded-3">
            <% skills.forEach((skill, index) => { %>
            <li
              class="list-group-item d-flex align-items-center skill-item"
              draggable="true"
              data-id="<%= skill._id %>"
            >
              <div style="display: flex; justify-content: space-between">
                <div>
                  <!-- Sequence Number -->
                  <span class="badge bg-primary sequence px-3 py-2 me-3 fs-6"
                    ><%= index + 1 %></span
                  >

                  <!-- Skill Name (takes remaining space) -->
                  <span class="fw-semibold fs-5 flex-grow-1"
                    ><%= skill.skill %></span
                  >
                  <!-- Skill Tag -->
                  <span
                    class=" text-blue-500 ms-2"
                    > ( <%= skill.tag.charAt(0).toUpperCase() + skill.tag.slice(1) %> )
                  </span>
                </div>

                <div>
                  <!-- Drag Handle at the end -->
                  <span class="handle text-muted fs-4 ms-3" style="cursor: grab"
                    >â˜°</span
                  >
                </div>
              </div>
            </li>

            <% }) %>
          </ul>

          <div class="text-center mt-5">
            <button
              id="saveOrder"
              class="btn btn-lg btn-gradient shadow-sm px-5 py-2"
            >
              ðŸ’¾ Save Sequence
            </button>
          </div>
        </div>
      </div>
    </div>

    <style>
      /* Gradient Heading */
      .text-gradient {
        background: linear-gradient(90deg, #0d6efd, #6610f2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      /* Card Styling */
      .card {
        background: #ffffff;
        border-radius: 1.5rem;
      }

      /* Skill Item Styling */
      .skill-item {
        padding: 1rem 1.2rem;
        border: none;
        border-bottom: 1px solid #f1f1f1;
        transition: all 0.25s ease-in-out;
      }
      .skill-item:last-child {
        border-bottom: none;
      }
      .skill-item:hover {
        background: #f8f9fa;
        transform: translateX(3px);
      }

      /* Dragging State */
      .skill-item.dragging {
        opacity: 0.6;
        background: #eef4ff;
        border-left: 5px solid #0d6efd;
        transform: scale(1.02);
      }

      /* Handle Styling */
      .handle {
        transition: 0.2s;
      }
      .handle:hover {
        color: #0d6efd;
        transform: rotate(15deg) scale(1.2);
      }

      /* Gradient Button */
      .btn-gradient {
        background: linear-gradient(135deg, #0d6efd, #6610f2);
        color: white;
        border: none;
        border-radius: 50px;
        transition: all 0.3s ease;
      }
      .btn-gradient:hover {
        opacity: 0.9;
        transform: scale(1.05);
      }

      /* Smooth Reorder Animation */
      #skillList li {
        transition: transform 0.2s ease, background 0.2s ease;
      }
    </style>

    <script>
      const list = document.getElementById("skillList");
      let dragged;

      list.addEventListener("dragstart", (e) => {
        dragged = e.target;
        e.target.style.opacity = 0.5;
      });

      list.addEventListener("dragend", (e) => {
        e.target.style.opacity = "";
      });

      list.addEventListener("dragover", (e) => {
        e.preventDefault();
        let target = e.target.closest("li");
        if (target && target !== dragged) {
          list.insertBefore(dragged, target.nextSibling);
        }
      });

      document
        .getElementById("saveOrder")
        .addEventListener("click", async () => {
          const orderedIds = [...list.querySelectorAll("li")].map(
            (li) => li.dataset.id
          );

          // console.log("New Order:", orderedIds);

          await fetch("/admin/reorder", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ orderedIds }),
          });

          alert("Order saved!");
        });
    </script>

    <!-- Existing Skills e <%= skills %> -->
  </div>

  <style>
    .pointshr {
      height: 1px;
      width: 100%;
      background-color: #e5e7eb;
      /* Tailwind's gray-300 */
    }
  </style>

  <!-- Alpine.js CDN -->
  <script
    src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
    defer
  ></script>

  <!-- Alpine.js Validation Script -->
  <script>
    const pointInput = document.getElementById("pointInput");
    // console.log(pointInput);
    function formHandler() {
      return {
        skill: "",
        newPoint: "",
        points: [],
        tag: "",
        errors: {},

        addPoint() {
          if (this.newPoint.trim() !== "") {
            this.points.push(this.newPoint.trim());
            this.newPoint = "";
            pointInput.focus(); // Focus back on the input after adding
          }
        },
        removePoint(index) {
          this.points.splice(index, 1);
        },

        validateAndSubmit() {
          this.errors = {};

          if (!this.skill.trim()) this.errors.skill = "Skill name is required.";
          if (this.points.length === 0)
            this.errors.points = "At least one point is required.";
          if (!this.tag) this.errors.tag = "Please select a tag.";

          if (Object.keys(this.errors).length === 0) {
            document.querySelector("form").submit();
            // submit if no errors
          }
        },
      };
    }
  </script>

  <!-- -------------------------- -->
</section>

<!-- skills -->
